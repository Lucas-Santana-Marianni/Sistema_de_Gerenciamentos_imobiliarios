CREATE DATABASE sistema_imobiliario;
USE sistema_imobiliario;

-- 2. Criação das Tabelas

-- Tabela Propriedades
CREATE TABLE Propriedades (
    id INT PRIMARY KEY AUTO_INCREMENT,
    endereco VARCHAR(255),
    tipo ENUM('casa', 'apartamento', 'terreno'),
    valor DECIMAL(10, 2),
    status ENUM('disponivel', 'vendido', 'alugado')
);

-- Tabela Clientes
CREATE TABLE Clientes (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(100),
    telefone VARCHAR(15),
    email VARCHAR(100),
    interesse ENUM('compra', 'aluguel')
);

-- Tabela Agentes
CREATE TABLE Agentes (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(100),
    telefone VARCHAR(15),
    email VARCHAR(100)
);

-- Tabela Transacoes com ON DELETE CASCADE nas chaves estrangeiras
CREATE TABLE Transacoes (
    id INT PRIMARY KEY AUTO_INCREMENT,
    cliente_id INT,
    agente_id INT,
    propriedade_id INT,
    data DATE,
    tipo_transacao ENUM('compra', 'aluguel'),
    FOREIGN KEY (cliente_id) REFERENCES Clientes(id) ON DELETE CASCADE,
    FOREIGN KEY (agente_id) REFERENCES Agentes(id) ON DELETE CASCADE,
    FOREIGN KEY (propriedade_id) REFERENCES Propriedades(id) ON DELETE CASCADE
);

-- 3. Inserção de Dados de Exemplo

-- Inserindo dados na tabela Propriedades
INSERT INTO Propriedades (endereco, tipo, valor, status)
VALUES 
    ('Rua A, 123', 'casa', 300000.00, 'disponivel'),
    ('Rua B, 456', 'apartamento', 250000.00, 'disponivel');

-- Inserindo dados na tabela Clientes
INSERT INTO Clientes (nome, telefone, email, interesse)
VALUES 
    ('João Silva', '123456789', 'joao@exemplo.com', 'compra'),
    ('Maria Santos', '987654321', 'maria@exemplo.com', 'aluguel');

-- Inserindo dados na tabela Agentes
INSERT INTO Agentes (nome, telefone, email)
VALUES 
    ('Carlos Pereira', '111111111', 'carlos@imobiliaria.com'),
    ('Ana Souza', '222222222', 'ana@imobiliaria.com');

-- Inserindo dados na tabela Transacoes
INSERT INTO Transacoes (cliente_id, agente_id, propriedade_id, data, tipo_transacao)
VALUES 
    (1, 1, 1, '2024-10-01', 'compra'),
    (2, 2, 2, '2024-10-15', 'aluguel');

-- 4. Consultas com SELECT

-- Listar todas as propriedades disponíveis
SELECT * FROM Propriedades WHERE status = 'disponivel';

-- Listar todas as transações de compra
SELECT * FROM Transacoes WHERE tipo_transacao = 'compra';

-- Detalhes completos de uma transação
SELECT 
    Transacoes.id AS transacao_id,
    Clientes.nome AS cliente,
    Agentes.nome AS agente,
    Propriedades.endereco AS endereco_propriedade,
    Transacoes.tipo_transacao,
    Transacoes.data
FROM 
    Transacoes
    JOIN Clientes ON Transacoes.cliente_id = Clientes.id
    JOIN Agentes ON Transacoes.agente_id = Agentes.id
    JOIN Propriedades ON Transacoes.propriedade_id = Propriedades.id;

-- 5. Atualização de Dados

-- Alterar o status de uma propriedade para "Vendido"
UPDATE Propriedades SET status = 'vendido' WHERE id = 1;

-- Atualizar o telefone de um cliente
UPDATE Clientes SET telefone = '555555555' WHERE id = 1;

-- 6. Exclusão de Dados

-- Remover um cliente específico
DELETE FROM Clientes WHERE id = 2;

-- Remover uma propriedade da lista
DELETE FROM Propriedades WHERE id = 2;

-- 7. Uso de JOIN para Relacionar Tabelas

-- Visualizar transações com detalhes completos dos envolvidos
SELECT 
    Transacoes.id AS transacao_id,
    Clientes.nome AS cliente,
    Agentes.nome AS agente,
    Propriedades.endereco AS endereco,
    Transacoes.tipo_transacao,
    Transacoes.data
FROM 
    Transacoes
    JOIN Clientes ON Transacoes.cliente_id = Clientes.id
    JOIN Agentes ON Transacoes.agente_id = Agentes.id
    JOIN Propriedades ON Transacoes.propriedade_id = Propriedades.id;
